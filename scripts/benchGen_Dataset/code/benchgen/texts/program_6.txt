```path.c
#include "program_6.h" 
unsigned long get_path() {
   const char* path = getenv("BENCH_PATH");
   if(path != NULL) { 
      return atoi(path);
   }else {
      unsigned long n = rand();
      return (n << 32) | rand();
   }
}


```
```program_6.c
#include "program_6.h"

int main(int argc, char** argv) {
   int loopsFactor = 100;
   srand(0);
   for (int i = 1; i < argc; i++) {
      if (strcmp(argv[i], "-path-seed") == 0) {
         i++;
         if (i < argc) {
            srand(atoi(argv[i]));
         }
      }
      else if (strcmp(argv[i], "-loops-factor") == 0) {
         i++;
         if (i < argc) {
            loopsFactor = atoi(argv[i]);
         }
      }
   }
   return 0;
}


```
```program_6.h
#ifndef program_6
#define program_6
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#ifdef DEBUG
    #define DEBUG_NEW(id) printf("[NEW]\t\tId %d created\n", id)
    #define DEBUG_COPY(id) printf("[COPY]\t\tId %d copied\n", id)
    #define DEBUG_RETURN(id) printf("[RETURN]\tId %d returned\n", id)
    #define DEBUG_FREE(id) printf("[FREE]\t\tId %d freed\n", id)
#else
    #define DEBUG_NEW(id)
    #define DEBUG_COPY(id)
    #define DEBUG_RETURN(id)
    #define DEBUG_FREE(id)
#endif
typedef struct {
   unsigned int* data;
   size_t size;
   size_t refC;
    int id;
} array_t;
typedef struct {
   array_t** data;
   size_t size;
} array_t_param;

unsigned long get_path();
#endif
```
